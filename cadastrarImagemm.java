/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package projetoblusablusas;

import com.jtattoo.plaf.aluminium.AluminiumLookAndFeel;
import com.jtattoo.plaf.graphite.GraphiteLookAndFeel;
import com.jtattoo.plaf.luna.LunaLookAndFeel;
import com.jtattoo.plaf.smart.SmartLookAndFeel;
import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author User
 */
public class cadastrarImagemm extends javax.swing.JInternalFrame {
    
    
private File imagensSelecionadas;


    /**
     * Creates new form cadastrarImagemm
     */
    public cadastrarImagemm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        funcImagem = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        imagemCarregada = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        caminhodaImagem = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();

        jLabel1.setText("Cadastrar Imagem Funcionário");

        jLabel3.setText("Funcionário-Imagem: ");

        jButton1.setText("Inserir");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jButton2.setText("Selecionar");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        imagemCarregada.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imagemCarregadaMouseClicked(evt);
            }
        });

        jLabel2.setText("Caminho Da Imagem: ");

        jButton3.setText("Atualizar");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(caminhodaImagem, javax.swing.GroupLayout.PREFERRED_SIZE, 757, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(funcImagem, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton1)
                            .addComponent(jButton2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                        .addComponent(imagemCarregada, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(funcImagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(109, 109, 109)
                        .addComponent(jButton1)
                        .addGap(28, 28, 28)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(imagemCarregada, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(caminhodaImagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        try {
            Connection coin = conexaoBancoDeDados.conexaoBanco();
            String sql = "INSERT INTO imagens_funcionario(nome,dados)VALUES(?,?)";
            PreparedStatement stmt = coin.prepareStatement(sql);
            stmt.setString(1, this.funcImagem.getText());
            String caminho = this.caminhodaImagem.getText();
            FileInputStream fis = new FileInputStream(caminho);
            stmt.setBinaryStream(2, fis,(int) new File(caminho).length());
            stmt.execute();
            stmt.close();
            JOptionPane.showMessageDialog(null, "Cadastro");

        } catch (Exception ex) {
            System.getLogger(cadastrarImagem.class.getName()).log(System.Logger.Level.ERROR, (String) null, ex);
        }

    }//GEN-LAST:event_jButton1MouseClicked

    @SuppressWarnings("ConvertToTryWithResources")
    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
       
        try {
            Connection coin = conexaoBancoDeDados.conexaoBanco();
            String sql = "SELECT dados FROM imagens_funcionario WHERE nome = ?";
            PreparedStatement stmt = coin.prepareStatement(sql);
            stmt.setString(1, this.funcImagem.getText());
            ResultSet rs = stmt.executeQuery();
            
            
            if(rs.next()){
                byte[] imgBytes = rs.getBytes("dados");
                //Converter os bytes em um icone de imagem
                
                ImageIcon imagem = new ImageIcon(imgBytes);
                
                
                
                JLabel imagem1 = new JLabel(imagem);
                //JOptionPane.showMessageDialog(null, imagem1,"Imagem carregada",JOptionPane.PLAIN_MESSAGE);   
                this.imagemCarregada.setIcon(imagem);
                
            }else{
               JOptionPane.showMessageDialog(null, "NULL"); 
            }
            
            
                    
        } catch (Exception ex) {
            System.getLogger(cadastrarImagemm.class.getName()).log(System.Logger.Level.ERROR, (String) null, ex);
        }
        
        
        
    }//GEN-LAST:event_jButton2MouseClicked

    private void imagemCarregadaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imagemCarregadaMouseClicked
        
         JFileChooser chooser = new JFileChooser();

        // Filtro para permitir apenas imagens
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Imagens", "jpg", "jpeg", "png");
        chooser.setFileFilter(filtro);

        // Abre a janela de seleção
        int resultado = chooser.showOpenDialog( imagemCarregada);

        // Se o usuário escolheu uma imagem
        if (resultado == JFileChooser.APPROVE_OPTION) {
            File imagemSelecionada = chooser.getSelectedFile();

            try {
                // Cria um ícone com a imagem selecionada
                ImageIcon iconOriginal = new ImageIcon(imagemSelecionada.getAbsolutePath());

                // Redimensiona a imagem para caber na JLabel
                Image imagemRedimensionada = iconOriginal.getImage().getScaledInstance(
                    imagemCarregada.getWidth(),
                    imagemCarregada.getHeight(),
                    Image.SCALE_SMOOTH
                );

                // Exibe a imagem na JLabel
                imagemCarregada.setIcon(new ImageIcon(imagemRedimensionada));

                // Guarda a imagem selecionada em uma variável da classe (para salvar no banco depois)
                imagensSelecionadas = imagemSelecionada;
                
                

            } catch (Exception e) {
                Logger.getLogger(cadastrarImagem.class.getName()).log(Level.SEVERE, null, e);
                JOptionPane.showMessageDialog(imagemCarregada, "Erro ao carregar a imagem.", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
        
        
    }//GEN-LAST:event_imagemCarregadaMouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
    try {
        Connection conn = conexaoBancoDeDados.conexaoBanco();
        String sql = "UPDATE imagens_funcionario SET dados=? WHERE nome = ? ";
        PreparedStatement stmt = conn.prepareStatement(sql);
        FileInputStream fis = new FileInputStream(this.imagensSelecionadas);
        stmt.setBinaryStream(1, fis, (int) this.imagensSelecionadas.length());
        stmt.setString(2, this.funcImagem.getText());
        stmt.executeUpdate();
        stmt.close();
        conn.close();
        fis.close();
        JOptionPane.showMessageDialog(null, "Imagem Modificada com sucesso");
        
        
    } catch (SQLException ex) {
        System.getLogger(cadastrarImagemm.class.getName()).log(System.Logger.Level.ERROR, (String) null, ex);
    } catch (FileNotFoundException ex) {
        System.getLogger(cadastrarImagemm.class.getName()).log(System.Logger.Level.ERROR, (String) null, ex);
    } catch (IOException ex) {
        System.getLogger(cadastrarImagemm.class.getName()).log(System.Logger.Level.ERROR, (String) null, ex);
    }
        
    }//GEN-LAST:event_jButton3MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField caminhodaImagem;
    private javax.swing.JTextField funcImagem;
    private javax.swing.JLabel imagemCarregada;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
